function createTopLeft(){
  var data;
  if (maxMoisture >= maxMoisture_2) { data = moistureData; }
  else { data = moistureData_2; }

  w = parentDiv.clientWidth || 720;
  h = parentDiv.clientHeight || 360;
  const margin = { top: 20, right: 30, bottom: 30, left: 50 }
  width = w - margin.left - margin.right,
  height = h - margin.top - margin.bottom;
  console.log("height: " + height + "||   width: " + width)

  const svg = d3.select(`#container`)
    .append("svg")
      .style("color", "white")
      .attr("width", w)
      .attr("height", h)
    .append("g")
      .style("color", "white")
      .attr("transform", `translate(${margin.left},${margin.top})`)

  var x = d3.scaleTime()
    .domain(d3.extent(data, function (d){return d.time;}))
    .range([0, width]);
  
  var y = d3.scaleLinear()
    .domain([0, d3.max(data, function (d){return d.value + 500;})])
    .range([height, 0]);
  svg.append("g")
    .call(d3.axisLeft(y));

  var scatter = svg.append('g')
    .attr("clip-path", "url(#clip)")
  
  const Tooltip = d3.select("#container")
      .append("div")
      .style("opacity", 0)
      .attr("class", "tooltip")
      .style("background-color", "#1ed75f")
      .style("border", "solid")
      .style("font-weight","600")
      .style("border-width", "0px")
      .style("border-radius", "5px")
      .style("padding", "5px")

      const mouseover = function(event,d) {
        Tooltip
          .style("opacity", 1)
      }
      const mousemove = function(event,d) {
        Tooltip
          .html("Exact value: " + d.value)
          .style("left", `${event.layerX+10}px`)
          .style("top", `${event.layerY}px`)
      }
      const mouseleave = function(event,d) {
        Tooltip
          .style("opacity", 0)
      }
  
   svg.append("path")
      .datum(moistureData)
      .attr("fill", "none")
      .attr("stroke", "#69b3a2")
      .attr("stroke-width", 1.5)
      .attr("d", d3.line()
        .x(function(d) { return x(d.value) })
        .y(function(d) { return y(d.time) })
        )
  
  // scatter
  //   .append("path")
  //   .datum(moistureData_2)
  //   .attr("stroke", "white")
  //   .attr("fill", "none")
  //   .attr("stroke-width", 3)
  //   .attr("d", d3.line()
  //     .x(d => x(d.time))
  //     .y(d => y(d.value))
  //   )  
    
  // scatter
  //   .append("path")
  //   .datum(moistureData)
  //   .attr("stroke", "white")
  //   .attr("fill", "none")
  //   .attr("stroke-width", 3)
  //   .attr("d", d3.line()
  //     .x(d => x(d.time))
  //     .y(d => y(d.value))
  //   )  

  scatter
    .selectAll("circle1")
    .data(moistureData)
    .enter()
    .append("circle1")
      .attr("cx", function (d) { return x(d.time); } )
      .attr("cy", function (d) { return y(d.value); } )
      .attr("r", 8)
      .style("opacity", 1)
      .attr("fill", "#1ed75f")
      .on("mouseover", mouseover)
      .on("mousemove", mousemove)
      .on("mouseleave", mouseleave)
      
  scatter
    .selectAll("circle2")
    .data(moistureData_2)
    .enter()
    .append("circle2")
      .attr("cx", function (d) { return x(d.time); } )
      .attr("cy", function (d) { return y(d.value); } )
      .attr("r", 8)
      .style("opacity", 1)
      .attr("fill", "#1ed75f")

}